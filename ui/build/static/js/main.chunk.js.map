{"version":3,"sources":["theme.ts","components/PlayerNameLink.tsx","components/PlayerRecordsTable.tsx","elements/Button.tsx","elements/TextInput.tsx","components/PlayerLookupInput.tsx","components/PlayerInfo.tsx","components/CurrentGameInfo.tsx","hooks/axiosHooks.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["palette","primary","main","secondary","status","danger","success","warning","neutral","info","typography","link","highlight","breakpoints","values","xs","sm","md","lg","xl","usePlayerNameLinkStyles","makeStyles","cursor","color","theme","textDecoration","linkLight","PlayerNameLink","props","classes","title","className","light","onClick","window","open","playerId","playerName","StyledTableCell","withStyles","head","backgroundColor","common","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","table","minWidth","tableHeadCell","filter","error","background","padding","PlayerRecordsTable","React","useState","sortColumn","setSortColumn","sortDirection","setSortDirection","handleTableHeaderClick","nextSortColumn","loading","CircularProgress","data","profileIds","Object","keys","tracker","records","profileId","record","wins_against","losses_to","sort","a","b","playerA","players","recordA","playerB","recordB","columnA","columnB","name","toLowerCase","TableContainer","component","Paper","Table","aria-label","TableHead","align","TableBody","map","player","date","moment","utc","last_played_against","key","scope","steam_id","profile_id","rating","local","format","Button","variant","disabled","type","children","StyledInput","Input","TextInput","value","placeholder","onChange","onKeyDown","inputProps","maxLength","startAdornment","InputAdornment","position","StyledFormLabel","FormLabel","display","justifyContent","alignItems","width","boxShadow","PlayerLookupInput","defaultName","setPlayerName","defaultLeaderboardName","leaderboardName","setLeaderboardName","ev","target","which","isLoading","length","onSubmit","trim","FormControl","RadioGroup","FormControlLabel","control","Radio","label","usePlayerInfoStyles","playerLink","borderRadius","PlayerInfo","numRecords","useCurrentGameInfoStyles","overflow","tableContainer","marginTop","inProgress","victory","loss","cell","CurrentGameInfo","matchId","isWin","otherTeamPlayers","otherTeamPlayer","i","myTeamPlayer","myTeamPlayers","style","textAlign","BASE_URL","location","origin","cache","outgoingRequests","api","axios","create","baseURL","getCacheKey","url","paramsStr","MUITheme","createMuiTheme","useAppStyles","app","appHeader","top","headerSize","height","headerLeft","headerRight","headerIcon","marginLeft","transition","pageContent","backgroundImageContainer","backgroundImage","zIndex","opacity","up","playerNameInputContainer","currentGameContainer","infoContainer","tableSize","marginBottom","errorText","appFooter","bottom","margin","App","defaultPlayerName","hash","slice","split","playerNameQuery","setPlayerNameQuery","leaderboardNameQuery","setLeaderboardNameQuery","apiUrl","params","setData","setLoading","setError","useEffect","cacheKey","JSON","stringify","cachedData","get","response","console","requestData","useGet","ThemeProvider","src","alt","most_recent_game","gameResponse","myTeamId","reduce","prev","curr","won","team","match_id","finished","gameResponseToProps","player_name","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["export const ColorPrimary = '#794C39';\nexport const ColorSecondary = '#2A2C2D';\n\nexport const ColorBackground = '#C39568';\n\nconst ColorLink = '#005DFF';\nconst ColorHighlight = '#B3D6FF';\n\nconst ColorDanger = '#cc412f';\nconst ColorSuccess = '#69af69';\nconst ColorWarning = '#C39568';\nconst ColorNeutral = '#98a6ad';\nconst ColorInfo = '#794C39';\n\nexport default {\n  palette: {\n    primary: {\n      main: ColorPrimary,\n    },\n    secondary: {\n      main: ColorSecondary,\n    },\n    status: {\n      danger: ColorDanger,\n      success: ColorSuccess,\n      warning: ColorWarning,\n      neutral: ColorNeutral,\n      info: ColorInfo,\n    },\n    typography: {\n      link: ColorLink,\n      highlight: ColorHighlight,\n    } as any,\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 960,\n      lg: 1280,\n      xl: 2048,\n    },\n  },\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport theme from '../theme';\n\nexport interface PlayerNameLinkProps {\n  playerName: string;\n  playerId: string;\n  light?: boolean;\n}\n\nconst usePlayerNameLinkStyles = makeStyles({\n  link: {\n    cursor: 'pointer',\n    color: theme.palette.typography.link,\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n  linkLight: {\n    cursor: 'pointer',\n    color: '#ddd',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n});\n\nconst PlayerNameLink = (props: PlayerNameLinkProps) => {\n  const classes = usePlayerNameLinkStyles();\n  return (\n    <span\n      title=\"aoe2.net link\"\n      className={props.light ? classes.linkLight : classes.link}\n      onClick={() => {\n        window.open(`https://aoe2.net/#profile-${props.playerId}`);\n      }}\n    >\n      {props.playerName}\n    </span>\n  );\n};\n\nexport default PlayerNameLink;\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport { LookupQueryResult } from '../hooks/axiosHooks';\nimport theme from '../theme';\nimport PlayerNameLink from './PlayerNameLink';\n\nconst SORT_DIR_ASC = 'asc';\nconst SORT_DIR_DSC = 'dsc';\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n  tableHeadCell: {\n    cursor: 'pointer',\n    '&:hover': {\n      filter: 'brightness(120%)',\n    },\n  },\n  error: {\n    color: theme.palette.status.danger,\n    background: theme.palette.secondary.main,\n    padding: '1rem',\n  },\n  link: {\n    cursor: 'pointer',\n    color: theme.palette.typography.link,\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n});\n\ninterface PlayerRecordsTable {\n  data?: LookupQueryResult;\n  loading?: boolean;\n  error?: boolean;\n}\n\nconst PlayerRecordsTable = (props: PlayerRecordsTable) => {\n  const [sortColumn, setSortColumn] = React.useState('last_played_against');\n  const [sortDirection, setSortDirection] = React.useState(SORT_DIR_DSC);\n  const classes = useStyles();\n\n  const handleTableHeaderClick = (nextSortColumn: string) => {\n    if (nextSortColumn === sortColumn) {\n      setSortDirection(\n        sortDirection === SORT_DIR_ASC ? SORT_DIR_DSC : SORT_DIR_ASC\n      );\n    } else {\n      if (nextSortColumn === 'name') {\n        setSortDirection(SORT_DIR_ASC);\n      } else {\n        setSortDirection(SORT_DIR_DSC);\n      }\n      setSortColumn(nextSortColumn);\n    }\n  };\n\n  if (props.loading) {\n    return <CircularProgress />;\n  }\n\n  if (props.error || !props.data) {\n    return (\n      <div className={classes.error}>\n        No player exists with searched name on the given leaderboard.\n      </div>\n    );\n  }\n\n  const data = props.data as LookupQueryResult;\n  (window as any).data = data;\n\n  const profileIds = Object.keys(data.tracker.records)\n    .filter(profileId => {\n      const record = data.tracker.records[profileId];\n      return record.wins_against + record.losses_to > 0;\n    })\n    .sort((a, b) => {\n      const playerA = data.tracker.players[a];\n      const recordA = data.tracker.records[a];\n\n      const playerB = data.tracker.players[b];\n      const recordB = data.tracker.records[b];\n\n      let columnA = recordA[sortColumn];\n      let columnB = recordB[sortColumn];\n\n      if (sortColumn === 'name') {\n        columnA = playerA.name.toLowerCase();\n        columnB = playerB.name.toLowerCase();\n      } else if (sortColumn === 'num_games') {\n        columnA = recordA.wins_against + recordA.losses_to;\n        columnB = recordB.wins_against + recordB.losses_to;\n      }\n\n      if (sortDirection === SORT_DIR_ASC) {\n        return columnA < columnB ? -1 : 1;\n      } else if (sortDirection === SORT_DIR_DSC) {\n        return columnA < columnB ? 1 : -1;\n      } else {\n        return 0;\n      }\n    });\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              onClick={() => {\n                handleTableHeaderClick('name');\n              }}\n              className={classes.tableHeadCell}\n              align=\"center\"\n            >\n              Player Name {sortColumn === 'name' ? `(${sortDirection})` : ''}\n            </StyledTableCell>\n            <StyledTableCell\n              onClick={() => {\n                handleTableHeaderClick('rating');\n              }}\n              className={classes.tableHeadCell}\n              align=\"center\"\n            >\n              Rating Last Played{' '}\n              {sortColumn === 'rating' ? `(${sortDirection})` : ''}\n            </StyledTableCell>\n            <StyledTableCell\n              onClick={() => {\n                handleTableHeaderClick('num_games');\n              }}\n              className={classes.tableHeadCell}\n              align=\"center\"\n            >\n              Num Games {sortColumn === 'num_games' ? `(${sortDirection})` : ''}\n            </StyledTableCell>\n            <StyledTableCell\n              onClick={() => {\n                handleTableHeaderClick('wins_against');\n              }}\n              className={classes.tableHeadCell}\n              align=\"center\"\n            >\n              Wins Against{' '}\n              {sortColumn === 'wins_against' ? `(${sortDirection})` : ''}\n            </StyledTableCell>\n            <StyledTableCell\n              onClick={() => {\n                handleTableHeaderClick('losses_to');\n              }}\n              className={classes.tableHeadCell}\n              align=\"center\"\n            >\n              Losses To {sortColumn === 'losses_to' ? `(${sortDirection})` : ''}\n            </StyledTableCell>\n            <StyledTableCell\n              onClick={() => {\n                handleTableHeaderClick('last_played_against');\n              }}\n              className={classes.tableHeadCell}\n              align=\"center\"\n            >\n              Last Played{' '}\n              {sortColumn === 'last_played_against' ? `(${sortDirection})` : ''}\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {profileIds.map(profileId => {\n            const player = data.tracker.players[profileId];\n            const record = data.tracker.records[profileId];\n\n            const date = moment.utc(record.last_played_against);\n\n            return (\n              <StyledTableRow key={profileId}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  <PlayerNameLink\n                    playerId={player.steam_id || player.profile_id}\n                    playerName={player.name}\n                  />\n                </StyledTableCell>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  {player.rating}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {record.wins_against + record.losses_to}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {record.wins_against}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {record.losses_to}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {moment(date).local().format('YYYY-MM-DD hh:mm:ss A')}\n                </StyledTableCell>\n              </StyledTableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default PlayerRecordsTable;\n","import React from 'react';\nimport ButtonMui from '@material-ui/core/Button';\n\nexport interface ButtonProps {\n  type: 'inherit' | 'primary' | 'secondary' | 'default' | undefined;\n  disabled?: boolean;\n  children?: React.ReactNode;\n  onClick?: (ev: React.SyntheticEvent) => void;\n}\n\nconst Button = (props: ButtonProps): JSX.Element => {\n  return (\n    <ButtonMui\n      variant=\"contained\"\n      onClick={props.onClick}\n      disabled={props.disabled}\n      color={props.type}\n    >\n      {props.children}\n    </ButtonMui>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport Input from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { withStyles } from '@material-ui/core';\n\ninterface InputProps {\n  value?: string;\n  placeholder?: string;\n  onChange?: (ev?: React.SyntheticEvent) => void;\n  onKeyDown?: (ev?: React.SyntheticEvent) => void;\n  showSearchIcon?: boolean;\n}\n\nconst StyledInput = withStyles(() => ({\n  root: {\n    background: 'white',\n  },\n}))(Input);\n\nconst TextInput = (props: InputProps): JSX.Element => {\n  const { value, placeholder, onChange, onKeyDown } = props;\n  return (\n    <StyledInput\n      type=\"text\"\n      value={value}\n      placeholder={placeholder}\n      onChange={onChange}\n      onKeyDown={onKeyDown}\n      inputProps={{\n        maxLength: 25,\n      }}\n      startAdornment={\n        <InputAdornment position=\"start\">\n          <SearchIcon />\n        </InputAdornment>\n      }\n    ></StyledInput>\n  );\n};\n\nexport default TextInput;\n","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport Button from '../elements/Button';\nimport TextInput from '../elements/TextInput';\n\nconst StyledFormLabel = withStyles(() => ({\n  root: {\n    color: 'black',\n    '&.Mui-focused': {\n      color: 'black',\n    },\n  },\n}))(FormLabel);\n\nconst useStyles = makeStyles(() => {\n  return {\n    root: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      width: '550px',\n      padding: '10px',\n      background: 'rgba(0, 0, 0, 0.1)',\n      boxShadow: '0px 0px 5px 4px rgba(0, 0, 0, 0.1)',\n    },\n  };\n});\n\ninterface PlayerLookupInputProps {\n  onSubmit: (playerName: string, leaderboardName: string) => void;\n  isLoading: boolean;\n  defaultName?: string;\n  defaultLeaderboardName?: string;\n}\n\nconst PlayerLookupInput = (props: PlayerLookupInputProps) => {\n  const [playerName, setPlayerName] = React.useState(props.defaultName || '');\n\n  const [leaderboardName, setLeaderboardName] = React.useState(\n    props.defaultLeaderboardName || 'solo'\n  );\n  const classes = useStyles();\n\n  const handleLeaderboardNameClick = (ev: React.SyntheticEvent) => {\n    setLeaderboardName((ev.target as HTMLInputElement).value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextInput\n        value={playerName}\n        onChange={ev => {\n          setPlayerName((ev?.target as HTMLInputElement).value);\n        }}\n        onKeyDown={ev => {\n          if (\n            (ev as any).which === 13 &&\n            !(props.isLoading || playerName.length < 3)\n          ) {\n            props.onSubmit(playerName.trim(), leaderboardName);\n          }\n        }}\n      />\n      <div>\n        <FormControl component=\"fieldset\">\n          <StyledFormLabel>Leaderboard</StyledFormLabel>\n          <RadioGroup\n            aria-label=\"leaderboard\"\n            name=\"leaderboard1\"\n            value={leaderboardName}\n            onChange={handleLeaderboardNameClick}\n          >\n            <FormControlLabel value=\"solo\" control={<Radio />} label=\"Solo\" />\n            <FormControlLabel value=\"team\" control={<Radio />} label=\"Team\" />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <Button\n        type=\"primary\"\n        disabled={props.isLoading || playerName.length < 3}\n        onClick={() => {\n          props.onSubmit(playerName, leaderboardName);\n        }}\n      >\n        Search\n      </Button>\n    </div>\n  );\n};\n\nexport default PlayerLookupInput;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlayerNameLink from './PlayerNameLink';\n\nconst usePlayerInfoStyles = makeStyles({\n  playerLink: {\n    background: 'rgba(255, 255, 255, 0.3)',\n    borderRadius: '5px',\n    padding: '5px',\n  },\n});\n\ninterface PlayerInfoProps {\n  playerName: string;\n  playerId: string;\n  leaderboardName: string;\n  numRecords: number;\n}\n\nconst PlayerInfo = (props: PlayerInfoProps) => {\n  const classes = usePlayerInfoStyles();\n\n  if (props.numRecords === 0) {\n    return <div></div>;\n  }\n\n  return (\n    <div>\n      Displaying {props.numRecords} players for leaderboard \"\n      {props.leaderboardName}\", player{' '}\n      <span className={classes.playerLink}>\n        <PlayerNameLink\n          playerId={props.playerId}\n          playerName={props.playerName}\n        />\n      </span>\n    </div>\n  );\n};\n\nexport default PlayerInfo;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport theme from '../theme';\nimport PlayerNameLink from './PlayerNameLink';\n\nconst useCurrentGameInfoStyles = makeStyles({\n  root: {\n    padding: '10px',\n    background: 'rgba(0, 0, 0, 0.1)',\n    boxShadow: '0px 0px 5px 4px rgba(0, 0, 0, 0.1)',\n    width: '550px',\n    overflow: 'hidden',\n  },\n  tableContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  table: {\n    background: 'rgba(0, 0, 0, 0.4)',\n    boxShadow: '0px 0px 5px 4px rgba(0, 0, 0, 0.4)',\n    padding: '10px',\n    marginTop: '16px',\n    color: 'white',\n  },\n  inProgress: {\n    color: theme.palette.status.neutral,\n    background: 'black',\n    padding: '5px',\n    borderRadius: '5px',\n  },\n  victory: {\n    color: theme.palette.status.success,\n    background: 'black',\n    padding: '5px',\n    borderRadius: '5px',\n  },\n  loss: {\n    color: theme.palette.status.danger,\n    background: 'black',\n    padding: '5px',\n    borderRadius: '5px',\n  },\n  cell: {\n    padding: '5px',\n  },\n});\n\ninterface Player {\n  name: string;\n  profileId: string;\n  rating: number;\n}\n\ninterface CurrentGameInfoProps {\n  playerId: string;\n  matchId: string;\n  playerName: string;\n  inProgress: boolean;\n  isWin: boolean;\n  myTeamPlayers: Player[];\n  otherTeamPlayers: Player[];\n}\n\nexport const gameResponseToProps = (\n  playerId: string,\n  gameResponse: any\n): CurrentGameInfoProps => {\n  let playerName = playerId;\n  let isWin = null;\n  const myTeamId = gameResponse.players.reduce((prev: number, curr: any) => {\n    if (curr.profile_id === playerId) {\n      playerName = curr.name;\n      isWin = curr.won;\n      return curr.team;\n    } else {\n      return prev;\n    }\n  }, 1);\n  const myTeamPlayers = gameResponse.players\n    .filter((player: any) => {\n      return player.team === myTeamId;\n    })\n    .map((player: any) => {\n      return {\n        profileId: player.profile_id,\n        name: player.name,\n        rating: player.rating,\n      };\n    });\n  const otherTeamPlayers = gameResponse.players\n    .filter((player: any) => {\n      return player.team !== myTeamId;\n    })\n    .map((player: any) => {\n      return {\n        profileId: player.profile_id,\n        name: player.name,\n        rating: player.rating,\n      };\n    });\n\n  return {\n    playerId,\n    playerName,\n    matchId: gameResponse.match_id,\n    inProgress: isWin === null ? true : !gameResponse.finished,\n    isWin: !!isWin,\n    myTeamPlayers,\n    otherTeamPlayers,\n  };\n};\n\nconst CurrentGameInfo = (props: CurrentGameInfoProps) => {\n  const classes = useCurrentGameInfoStyles();\n  return (\n    <div className={classes.root}>\n      Most Recent Game{' '}\n      {props.inProgress ? (\n        <>\n          <span className={classes.inProgress}>In Progress</span>{' '}\n          <span> Game Id: {props.matchId}</span>\n        </>\n      ) : null}\n      {!props.inProgress && props.isWin ? (\n        <span className={classes.victory}>Victory</span>\n      ) : null}\n      {!props.inProgress && !props.isWin ? (\n        <span className={classes.loss}>Loss</span>\n      ) : null}\n      <div className={classes.tableContainer}>\n        <table className={classes.table}>\n          <thead>\n            <tr>\n              <th>{props.playerName}'s Team</th>\n              <th>Opposing Team</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.otherTeamPlayers.map(\n              (otherTeamPlayer: Player, i: number) => {\n                const myTeamPlayer = props.myTeamPlayers[i];\n                return (\n                  <tr key={'row-' + i}>\n                    <td className={classes.cell} style={{ textAlign: 'left' }}>\n                      <PlayerNameLink\n                        playerId={myTeamPlayer.profileId}\n                        playerName={`${myTeamPlayer.name} (${myTeamPlayer.rating})`}\n                        light\n                      />\n                    </td>\n                    <td className={classes.cell} style={{ textAlign: 'right' }}>\n                      <PlayerNameLink\n                        playerId={otherTeamPlayer.profileId}\n                        playerName={`${otherTeamPlayer.name} (${otherTeamPlayer.rating})`}\n                        light\n                      />\n                    </td>\n                  </tr>\n                );\n              }\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default CurrentGameInfo;\n","import { useState, useEffect } from 'react';\nimport axios, { AxiosResponse } from 'axios';\n\nconst BASE_URL = window.location.origin;\nconst LOG_REQUESTS = (process.env as any).NODE_ENV === 'development';\n\nexport interface LookupQueryParams {\n  playerName: string;\n  leaderboardName: string;\n}\n\ninterface LookupQueryPlayersResult {\n  [profile_id: string]: {\n    profile_id: string;\n    rating: string;\n    steam_id: string;\n    name: string;\n  };\n}\n\ninterface LookupQueryRecordsResult {\n  [profile_id: string]: {\n    profile_id: string;\n    last_played_against: string;\n    losses_to: number;\n    wins_against: number;\n  };\n}\n\nexport interface LookupQueryResult {\n  error?: string;\n  leaderboard_id: number;\n  leaderboard_name: string;\n  player_name: string;\n  profile_id: string;\n  tracker: {\n    wins: number;\n    losses: number;\n    players: LookupQueryPlayersResult;\n    records: LookupQueryRecordsResult;\n  };\n}\nconst cache = {};\n\nconst outgoingRequests = {};\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n});\n\nexport const getCacheKey = (\n  type: string,\n  url: string,\n  paramsStr?: string\n): string => {\n  return type + '/' + url + '/' + (paramsStr || '');\n};\n\nexport const clearCache = (key: string): boolean => {\n  if (cache[key]) {\n    delete cache[key];\n    return true;\n  }\n  return false;\n};\n\nexport const useGet = function <QueryParamsType>(\n  apiUrl: string,\n  params?: QueryParamsType\n): [AxiosResponse | null, boolean, boolean] {\n  const [data, setData] = useState<AxiosResponse | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const requestData = async () => {\n      if (!apiUrl) {\n        setLoading(false);\n        setError(false);\n        return;\n      }\n      const cacheKey = getCacheKey('GET', apiUrl, JSON.stringify(params));\n      const cachedData = cache[cacheKey];\n      if (cachedData) {\n        setData(cachedData);\n        setLoading(false);\n        setError(false);\n      } else if (!outgoingRequests[cacheKey]) {\n        try {\n          outgoingRequests[cacheKey] = true;\n          setLoading(true);\n          const response = await api.get(apiUrl, {\n            params,\n          });\n          if (LOG_REQUESTS) {\n            console.log('get', cacheKey, response.data);\n          }\n          setData(response);\n          setLoading(false);\n          setError(false);\n          outgoingRequests[cacheKey] = false;\n          cache[cacheKey] = response;\n        } catch (e) {\n          console.error('Failed to get', e);\n          setError(true);\n          setData(null);\n          setLoading(false);\n        }\n      }\n    };\n    requestData();\n  }, [apiUrl, params]);\n\n  return [data, loading, error];\n};\n\nexport const usePost = function <QueryParamsType, BodyParamsType>(\n  apiUrl: string,\n  params?: QueryParamsType,\n  body?: BodyParamsType\n): [AxiosResponse | null, boolean, boolean] {\n  const [data, setData] = useState<AxiosResponse | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const requestData = async () => {\n      if (!apiUrl) {\n        setLoading(false);\n        setError(false);\n        return;\n      }\n      const cacheKey = getCacheKey(\n        'POST',\n        apiUrl,\n        '[' + JSON.stringify(params) + ',' + JSON.stringify(body) + ']'\n      );\n      const cachedData = cache[cacheKey];\n      if (cachedData) {\n        setData(cachedData);\n        setLoading(false);\n        setError(false);\n      } else if (!outgoingRequests[cacheKey]) {\n        try {\n          outgoingRequests[cacheKey] = true;\n          setLoading(true);\n          const response = await api.post(apiUrl, {\n            params,\n            body,\n          });\n          if (LOG_REQUESTS) {\n            console.log('post', cacheKey, response.data);\n          }\n          setData(response);\n          setLoading(false);\n          setError(false);\n          outgoingRequests[cacheKey] = false;\n          cache[cacheKey] = response;\n        } catch (e) {\n          console.error('Failed to post', e);\n          setError(true);\n          setData(null);\n          setLoading(false);\n        }\n      }\n    };\n    requestData();\n  }, [apiUrl, params, body]);\n\n  return [data, loading, error];\n};\n","import React from 'react';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  makeStyles,\n} from '@material-ui/core/styles';\nimport theme, { ColorBackground } from './theme';\nimport PlayerRecordsTable from './components/PlayerRecordsTable';\nimport PlayerLookupInput from './components/PlayerLookupInput';\nimport PlayerInfo from './components/PlayerInfo';\nimport CurrentGameInfo, {\n  gameResponseToProps,\n} from './components/CurrentGameInfo';\nimport { useGet } from './hooks/axiosHooks';\n\nconst MUITheme = createMuiTheme(theme);\n\nconst useAppStyles = makeStyles(theme => {\n  return {\n    app: {\n      textAlign: 'center',\n      position: 'relative',\n    },\n    appHeader: {\n      fontSize: '1.5rem',\n      color: 'black',\n      display: 'flex',\n      justifyContent: 'center',\n      position: 'fixed',\n      top: '0px',\n      width: '100%',\n      background: ColorBackground,\n    },\n    headerSize: {\n      position: 'relative',\n      height: '50px',\n      width: '1200px',\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n    headerLeft: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      height: '100%',\n      color: 'white',\n      padding: '0px 10px',\n      background: 'rgba(0, 0, 0, 0.1)',\n      boxShadow: '0px -4px 5px 4px rgba(0, 0, 0, 0.1)',\n    },\n    headerRight: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      height: '100%',\n    },\n    headerIcon: {\n      width: '24px',\n      cursor: 'pointer',\n      marginLeft: '10px',\n      borderRadius: '24px',\n      background: 'rgba(0, 0, 0, 0.1)',\n      boxShadow: '0px 0px 5px 4px rgba(0, 0, 0, 0.1)',\n      transition: 'background 0.5s, box-shadow 0.5s',\n      '&:hover': {\n        background: 'rgba(0, 0, 0, 0.3)',\n        boxShadow: '0px 0px 5px 4px rgba(0, 0, 0, 0.3)',\n      }\n    },\n    pageContent: {\n      marginTop: '50px',\n    },\n    backgroundImageContainer: {\n      display: 'flex',\n      justifyContent: 'center',\n    },\n    backgroundImage: {\n      position: 'fixed',\n      zIndex: -1,\n      opacity: 0.25,\n      [theme.breakpoints.up('xl')]: {\n        width: '3072px',\n      },\n    },\n    playerNameInputContainer: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginTop: '2rem',\n    },\n    currentGameContainer: {\n      marginTop: '2rem',\n      display: 'flex',\n      justifyContent: 'center',\n    },\n    infoContainer: {\n      marginTop: '2rem',\n    },\n    tableContainer: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginTop: '2rem',\n    },\n    tableSize: {\n      width: '1200px',\n      marginBottom: '5rem',\n    },\n    errorText: {\n      color: theme.palette.error.main,\n    },\n    appFooter: {\n      position: 'absolute',\n      bottom: 0,\n      margin: '2rem',\n      width: 'calc(100% - 4rem)',\n    },\n  };\n});\n\nconst App = (): JSX.Element => {\n  const classes = useAppStyles();\n\n  const defaultPlayerName =\n    window.location.hash.slice(1).split(',')[0].slice(0, 25) || '';\n  let defaultLeaderboardName = window.location.hash.slice(1).split(',')[1];\n  if (defaultLeaderboardName !== 'solo' && defaultLeaderboardName !== 'team') {\n    defaultLeaderboardName = '';\n  }\n\n  const [playerNameQuery, setPlayerNameQuery] = React.useState(\n    defaultPlayerName\n  );\n  const [leaderboardNameQuery, setLeaderboardNameQuery] = React.useState(\n    defaultLeaderboardName\n  );\n\n  const [response, loading, error] = useGet(\n    playerNameQuery ? `lookup/${playerNameQuery}/${leaderboardNameQuery}` : ''\n  );\n\n  return (\n    <ThemeProvider theme={MUITheme}>\n      <div className={classes.app}>\n        <div className={classes.pageContent}>\n          <div className={classes.backgroundImageContainer}>\n            <img\n              src=\"/static/background.jpg\"\n              className={classes.backgroundImage}\n              alt=\"bg\"\n            />\n          </div>\n          <div className={classes.playerNameInputContainer}>\n            <PlayerLookupInput\n              isLoading={loading}\n              onSubmit={(playerName, leaderboardName) => {\n                setPlayerNameQuery(playerName);\n                setLeaderboardNameQuery(leaderboardName);\n                window.location.hash = `${playerName},${leaderboardName}`;\n              }}\n              defaultName={defaultPlayerName}\n              defaultLeaderboardName={defaultLeaderboardName}\n            />\n          </div>\n          <div className={classes.currentGameContainer}>\n            {!loading && response?.data.most_recent_game ? (\n              <CurrentGameInfo\n                {...gameResponseToProps(\n                  response?.data.profile_id,\n                  response?.data.most_recent_game\n                )}\n              />\n            ) : null}\n          </div>\n          <div className={classes.infoContainer}>\n            {!loading ? (\n              <PlayerInfo\n                playerName={response?.data.player_name}\n                playerId={response?.data.profile_id}\n                leaderboardName={leaderboardNameQuery}\n                numRecords={\n                  Object.keys(response?.data.tracker.records || {}).length\n                }\n              />\n            ) : null}\n          </div>\n          <div className={classes.tableContainer}>\n            <div className={classes.tableSize}>\n              {playerNameQuery ? (\n                <PlayerRecordsTable\n                  loading={loading}\n                  error={error}\n                  data={response?.data}\n                />\n              ) : null}\n            </div>\n          </div>\n          <header className={classes.appHeader}>\n            <div className={classes.headerSize}>\n              <div className={classes.headerLeft}>\n                AOE2: DE Head2Head - Matchup Tracker\n              </div>\n              <div className={classes.headerRight}>\n                <img\n                  src=\"static/aoe2net.png\"\n                  alt=\"aoe2net\"\n                  title=\"aoe2.net\"\n                  className={classes.headerIcon}\n                  onClick={() => {\n                    window.open('https://aoe2.net/');\n                  }}\n                ></img>\n                <img\n                  src=\"static/github.png\"\n                  alt=\"github\"\n                  title=\"github\"\n                  className={classes.headerIcon}\n                  onClick={() => {\n                    window.open(\n                      'https://github.com/benjamin-t-brown/aoe2de_head2head'\n                    );\n                  }}\n                ></img>\n              </div>\n            </div>\n          </header>\n          <footer className={classes.appFooter}>\n            This site is not affiliated with or endorsed by Microsoft\n            Corporation. Age of Empires II: Definitive Edition is a trademark or\n            registered trademark of Microsoft Corporation in the U.S. and other\n            countries.\n          </footer>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}