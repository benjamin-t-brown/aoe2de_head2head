{"version":3,"sources":["theme.ts","components/PlayerRecordsTable.tsx","elements/Button.tsx","elements/TextInput.tsx","components/PlayerLookupInput.tsx","components/PlayerInfo.tsx","hooks/axiosHooks.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["palette","primary","main","secondary","status","danger","success","warning","neutral","info","typography","link","highlight","breakpoints","values","xs","sm","md","lg","xl","StyledTableCell","withStyles","theme","head","backgroundColor","color","common","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","table","minWidth","tableHeadCell","cursor","filter","error","background","padding","textDecoration","PlayerRecordsTable","props","React","useState","sortColumn","setSortColumn","sortDirection","setSortDirection","classes","handleTableHeaderClick","nextSortColumn","loading","CircularProgress","data","className","window","profileIds","Object","keys","tracker","records","profileId","record","wins_against","losses_to","sort","a","b","playerA","players","recordA","playerB","recordB","columnA","columnB","name","toLowerCase","TableContainer","component","Paper","Table","aria-label","TableHead","onClick","align","TableBody","map","player","date","moment","utc","last_played_against","key","scope","open","steam_id","profile_id","local","format","Button","variant","disabled","type","children","StyledInput","Input","TextInput","value","placeholder","onChange","onKeyDown","inputProps","maxLength","startAdornment","InputAdornment","position","StyledFormLabel","FormLabel","display","justifyContent","alignItems","width","PlayerLookupInput","defaultName","playerName","setPlayerName","defaultLeaderboardName","leaderboardName","setLeaderboardName","ev","target","which","isLoading","length","onSubmit","FormControl","RadioGroup","FormControlLabel","control","Radio","label","PlayerInfo","numRecords","BASE_URL","location","origin","cache","api","axios","create","baseURL","MUITheme","createMuiTheme","useAppStyles","app","textAlign","appHeader","top","headerSize","height","headerLeft","headerRight","headerIcon","marginLeft","pageContent","marginTop","backgroundImageContainer","backgroundImage","zIndex","opacity","up","playerNameInputContainer","infoContainer","tableContainer","tableSize","marginBottom","errorText","appFooter","bottom","margin","App","defaultPlayerName","hash","slice","split","playerNameQuery","setPlayerNameQuery","leaderboardNameQuery","setLeaderboardNameQuery","apiUrl","params","setData","setLoading","setError","useEffect","url","paramsStr","JSON","stringify","cachedData","cacheKey","get","response","console","requestData","useGet","log","ThemeProvider","src","alt","player_name","title","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["export const ColorPrimary = '#794C39';\nexport const ColorSecondary = '#2A2C2D';\n\nexport const ColorBackground = '#C39568';\n\nconst ColorLink = '#005DFF';\nconst ColorHighlight = '#B3D6FF';\n\nconst ColorDanger = '#b52513';\nconst ColorSuccess = '#6986af';\nconst ColorWarning = '#C39568';\nconst ColorNeutral = '#2A2C2D';\nconst ColorInfo = '#794C39';\n\nexport default {\n  palette: {\n    primary: {\n      main: ColorPrimary,\n    },\n    secondary: {\n      main: ColorSecondary,\n    },\n    status: {\n      danger: ColorDanger,\n      success: ColorSuccess,\n      warning: ColorWarning,\n      neutral: ColorNeutral,\n      info: ColorInfo,\n    },\n    typography: {\n      link: ColorLink,\n      highlight: ColorHighlight,\n    } as any,\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 960,\n      lg: 1280,\n      xl: 2048,\n    },\n  },\n};\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport { LookupQueryResult } from '../hooks/axiosHooks';\nimport theme from '../theme';\n\nconst SORT_DIR_ASC = 'asc';\nconst SORT_DIR_DSC = 'dsc';\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    // background: ColorBackground,\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n  tableHeadCell: {\n    cursor: 'pointer',\n    '&:hover': {\n      filter: 'brightness(120%)',\n    },\n  },\n  error: {\n    color: theme.palette.status.danger,\n    background: theme.palette.secondary.main,\n    padding: '1rem',\n  },\n  link: {\n    cursor: 'pointer',\n    color: theme.palette.typography.link,\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n});\n\ninterface PlayerRecordsTable {\n  data?: LookupQueryResult;\n  loading?: boolean;\n  error?: boolean;\n}\n\nconst PlayerRecordsTable = (props: PlayerRecordsTable) => {\n  const [sortColumn, setSortColumn] = React.useState('last_played_against');\n  const [sortDirection, setSortDirection] = React.useState(SORT_DIR_DSC);\n  const classes = useStyles();\n\n  const handleTableHeaderClick = (nextSortColumn: string) => {\n    if (nextSortColumn === sortColumn) {\n      setSortDirection(\n        sortDirection === SORT_DIR_ASC ? SORT_DIR_DSC : SORT_DIR_ASC\n      );\n    } else {\n      if (nextSortColumn === 'name') {\n        setSortDirection(SORT_DIR_ASC);\n      } else {\n        setSortDirection(SORT_DIR_DSC);\n      }\n      setSortColumn(nextSortColumn);\n    }\n  };\n\n  if (props.loading) {\n    return <CircularProgress />;\n  }\n\n  if (props.error || !props.data) {\n    return (\n      <div className={classes.error}>\n        No player exists with searched name on the given leaderboard.\n      </div>\n    );\n  }\n\n  const data = props.data as LookupQueryResult;\n  (window as any).data = data;\n\n  const profileIds = Object.keys(data.tracker.records)\n    .filter(profileId => {\n      const record = data.tracker.records[profileId];\n      return record.wins_against + record.losses_to > 0;\n    })\n    .sort((a, b) => {\n      const playerA = data.tracker.players[a];\n      const recordA = data.tracker.records[a];\n\n      const playerB = data.tracker.players[b];\n      const recordB = data.tracker.records[b];\n\n      let columnA = recordA[sortColumn];\n      let columnB = recordB[sortColumn];\n\n      if (sortColumn === 'name') {\n        columnA = playerA.name.toLowerCase();\n        columnB = playerB.name.toLowerCase();\n      } else if (sortColumn === 'num_games') {\n        columnA = recordA.wins_against + recordA.losses_to;\n        columnB = recordB.wins_against + recordB.losses_to;\n      }\n\n      if (sortDirection === SORT_DIR_ASC) {\n        return columnA < columnB ? -1 : 1;\n      } else if (sortDirection === SORT_DIR_DSC) {\n        return columnA < columnB ? 1 : -1;\n      } else {\n        return 0;\n      }\n    });\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell\n              onClick={() => {\n                handleTableHeaderClick('name');\n              }}\n              className={classes.tableHeadCell}\n              align=\"center\"\n            >\n              Player Name {sortColumn === 'name' ? `(${sortDirection})` : ''}\n            </StyledTableCell>\n            <StyledTableCell\n              onClick={() => {\n                handleTableHeaderClick('num_games');\n              }}\n              className={classes.tableHeadCell}\n              align=\"center\"\n            >\n              Num Games {sortColumn === 'num_games' ? `(${sortDirection})` : ''}\n            </StyledTableCell>\n            <StyledTableCell\n              onClick={() => {\n                handleTableHeaderClick('wins_against');\n              }}\n              className={classes.tableHeadCell}\n              align=\"center\"\n            >\n              Wins Against{' '}\n              {sortColumn === 'wins_against' ? `(${sortDirection})` : ''}\n            </StyledTableCell>\n            <StyledTableCell\n              onClick={() => {\n                handleTableHeaderClick('losses_to');\n              }}\n              className={classes.tableHeadCell}\n              align=\"center\"\n            >\n              Losses To {sortColumn === 'losses_to' ? `(${sortDirection})` : ''}\n            </StyledTableCell>\n            <StyledTableCell\n              onClick={() => {\n                handleTableHeaderClick('last_played_against');\n              }}\n              className={classes.tableHeadCell}\n              align=\"center\"\n            >\n              Last Played{' '}\n              {sortColumn === 'last_played_against' ? `(${sortDirection})` : ''}\n            </StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {profileIds.map(profileId => {\n            const player = data.tracker.players[profileId];\n            const record = data.tracker.records[profileId];\n\n            const date = moment.utc(record.last_played_against);\n\n            return (\n              <StyledTableRow key={profileId}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  <span\n                    className={classes.link}\n                    onClick={() => {\n                      window.open(\n                        `https://aoe2.net/#profile-${\n                          player.steam_id || player.profile_id\n                        }`\n                      );\n                    }}\n                  >\n                    {player.name}\n                  </span>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {record.wins_against + record.losses_to}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {record.wins_against}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {record.losses_to}\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  {moment(date).local().format('YYYY-MM-DD hh:mm:ss A')}\n                </StyledTableCell>\n              </StyledTableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default PlayerRecordsTable;\n","import React from 'react';\nimport ButtonMui from '@material-ui/core/Button';\n\nexport interface ButtonProps {\n  type: 'inherit' | 'primary' | 'secondary' | 'default' | undefined;\n  disabled?: boolean;\n  children?: React.ReactNode;\n  onClick?: (ev: React.SyntheticEvent) => void;\n}\n\nconst Button = (props: ButtonProps): JSX.Element => {\n  return (\n    <ButtonMui\n      variant=\"contained\"\n      onClick={props.onClick}\n      disabled={props.disabled}\n      color={props.type}\n    >\n      {props.children}\n    </ButtonMui>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport Input from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { withStyles } from '@material-ui/core';\n\ninterface InputProps {\n  value?: string;\n  placeholder?: string;\n  onChange?: (ev?: React.SyntheticEvent) => void;\n  onKeyDown?: (ev?: React.SyntheticEvent) => void;\n  showSearchIcon?: boolean;\n}\n\nconst StyledInput = withStyles(() => ({\n  root: {\n    background: 'white',\n  },\n}))(Input);\n\nconst TextInput = (props: InputProps): JSX.Element => {\n  const { value, placeholder, onChange, onKeyDown } = props;\n  return (\n    <StyledInput\n      type=\"text\"\n      value={value}\n      placeholder={placeholder}\n      onChange={onChange}\n      onKeyDown={onKeyDown}\n      inputProps={{\n        maxLength: 25,\n      }}\n      startAdornment={\n        <InputAdornment position=\"start\">\n          <SearchIcon />\n        </InputAdornment>\n      }\n    ></StyledInput>\n  );\n};\n\nexport default TextInput;\n","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport Button from '../elements/Button';\nimport TextInput from '../elements/TextInput';\n\nconst StyledFormLabel = withStyles(() => ({\n  root: {\n    color: 'black',\n    '&.Mui-focused': {\n      color: 'black',\n    },\n  },\n}))(FormLabel);\n\nconst useStyles = makeStyles(() => {\n  return {\n    root: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      width: '550px',\n    },\n  };\n});\n\ninterface PlayerLookupInputProps {\n  onSubmit: (playerName: string, leaderboardName: string) => void;\n  isLoading: boolean;\n  defaultName?: string;\n  defaultLeaderboardName?: string;\n}\n\nconst PlayerLookupInput = (props: PlayerLookupInputProps) => {\n  const [playerName, setPlayerName] = React.useState(props.defaultName || '');\n\n  const [leaderboardName, setLeaderboardName] = React.useState(\n    props.defaultLeaderboardName || 'solo'\n  );\n  const classes = useStyles();\n\n  const handleLeaderboardNameClick = (ev: React.SyntheticEvent) => {\n    setLeaderboardName((ev.target as HTMLInputElement).value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextInput\n        value={playerName}\n        onChange={ev => {\n          setPlayerName((ev?.target as HTMLInputElement).value);\n        }}\n        onKeyDown={ev => {\n          if (\n            (ev as any).which === 13 &&\n            !(props.isLoading || playerName.length < 3)\n          ) {\n            props.onSubmit(playerName, leaderboardName);\n          }\n        }}\n      />\n      <div>\n        <FormControl component=\"fieldset\">\n          <StyledFormLabel>Leaderboard</StyledFormLabel>\n          <RadioGroup\n            aria-label=\"leaderboard\"\n            name=\"leaderboard1\"\n            value={leaderboardName}\n            onChange={handleLeaderboardNameClick}\n          >\n            <FormControlLabel value=\"solo\" control={<Radio />} label=\"Solo\" />\n            <FormControlLabel value=\"team\" control={<Radio />} label=\"Team\" />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <Button\n        type=\"primary\"\n        disabled={props.isLoading || playerName.length < 3}\n        onClick={() => {\n          props.onSubmit(playerName, leaderboardName);\n        }}\n      >\n        Search\n      </Button>\n    </div>\n  );\n};\n\nexport default PlayerLookupInput;\n","import React from 'react';\n\ninterface PlayerInfoProps {\n  playerName: string;\n  leaderboardName: string;\n  numRecords: number;\n}\n\nconst PlayerInfo = (props: PlayerInfoProps) => {\n  if (props.numRecords === 0) {\n    return <div></div>;\n  }\n\n  return (\n    <div>\n      Displaying {props.numRecords} players for leaderboard \"\n      {props.leaderboardName}\", player \"{props.playerName}\"\n    </div>\n  );\n};\n\nexport default PlayerInfo;\n","import { useState, useEffect } from 'react';\nimport axios, { AxiosResponse } from 'axios';\n\nconst BASE_URL = window.location.origin;\n\nexport interface LookupQueryParams {\n  playerName: string;\n  leaderboardName: string;\n}\n\ninterface LookupQueryPlayersResult {\n  [profile_id: string]: {\n    profile_id: string;\n    steam_id: string;\n    name: string;\n  };\n}\n\ninterface LookupQueryRecordsResult {\n  [profile_id: string]: {\n    profile_id: string;\n    last_played_against: string;\n    losses_to: number;\n    wins_against: number;\n  };\n}\n\nexport interface LookupQueryResult {\n  error?: string;\n  leaderboard_id: number;\n  leaderboard_name: string;\n  player_name: string;\n  profile_id: string;\n  tracker: {\n    wins: number;\n    losses: number;\n    players: LookupQueryPlayersResult;\n    records: LookupQueryRecordsResult;\n  };\n}\n\nconst cache = {};\n\nconst getCacheKey = (type: string, url: string, paramsStr: string): string => {\n  return type + '/' + url + '/' + paramsStr;\n};\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n});\n\nexport const useGet = function <QueryParamsType>(\n  apiUrl: string,\n  params?: QueryParamsType\n): [AxiosResponse | null, boolean, boolean] {\n  const [data, setData] = useState<AxiosResponse | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const requestData = async () => {\n      if (!apiUrl) {\n        setLoading(false);\n        setError(false);\n        return;\n      }\n      const cacheKey = getCacheKey(\n        'GET',\n        apiUrl,\n        params ? JSON.stringify(params) : ''\n      );\n      const cachedData = cache[cacheKey];\n      if (cachedData) {\n        setData(cachedData);\n        setLoading(false);\n        setError(false);\n      } else {\n        try {\n          setLoading(true);     \n          const response = await api.get(apiUrl, {\n            params,\n          });\n          setData(response);\n          setLoading(false);\n          setError(false);\n          cache[cacheKey] = response;\n        } catch (e) {\n          console.error('Failed to get', e);\n          setData(null);\n          setLoading(false);\n          setError(true);\n        }\n      }\n    };\n    requestData();\n  }, [apiUrl, params]);\n\n  return [data, loading, error];\n};\n","import React from 'react';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  makeStyles,\n} from '@material-ui/core/styles';\nimport theme, { ColorBackground } from './theme';\nimport PlayerRecordsTable from './components/PlayerRecordsTable';\nimport PlayerLookupInput from './components/PlayerLookupInput';\nimport PlayerInfo from './components/PlayerInfo';\nimport { useGet } from './hooks/axiosHooks';\n\nconst MUITheme = createMuiTheme(theme);\n\nconst useAppStyles = makeStyles(theme => {\n  return {\n    app: {\n      textAlign: 'center',\n      position: 'relative',\n    },\n    appHeader: {\n      fontSize: '1.5rem',\n      color: 'black',\n      display: 'flex',\n      justifyContent: 'center',\n      position: 'fixed',\n      top: '0px',\n      width: '100%',\n      background: ColorBackground,\n    },\n    headerSize: {\n      position: 'relative',\n      height: '50px',\n      width: '1200px',\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n    headerLeft: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      height: '100%',\n    },\n    headerRight: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      height: '100%',\n    },\n    headerIcon: {\n      width: '24px',\n      cursor: 'pointer',\n      marginLeft: '10px',\n    },\n    pageContent: {\n      marginTop: '50px',\n    },\n    backgroundImageContainer: {\n      display: 'flex',\n      justifyContent: 'center',\n    },\n    backgroundImage: {\n      position: 'fixed',\n      zIndex: -1,\n      opacity: 0.25,\n      [theme.breakpoints.up('xl')]: {\n        width: '3072px',\n      },\n    },\n    playerNameInputContainer: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginTop: '2rem',\n    },\n    infoContainer: {\n      marginTop: '2rem',\n    },\n    tableContainer: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginTop: '2rem',\n    },\n    tableSize: {\n      width: '1200px',\n      marginBottom: '5rem',\n    },\n    errorText: {\n      color: theme.palette.error.main,\n    },\n    appFooter: {\n      position: 'absolute',\n      bottom: 0,\n      margin: '2rem',\n    },\n  };\n});\n\nconst App = (): JSX.Element => {\n  const classes = useAppStyles();\n\n  const defaultPlayerName =\n    window.location.hash.slice(1).split(',')[0].slice(0, 25) || '';\n  let defaultLeaderboardName = window.location.hash.slice(1).split(',')[1];\n  if (defaultLeaderboardName !== 'solo' && defaultLeaderboardName !== 'team') {\n    defaultLeaderboardName = '';\n  }\n\n  const [playerNameQuery, setPlayerNameQuery] = React.useState(\n    defaultPlayerName\n  );\n  const [leaderboardNameQuery, setLeaderboardNameQuery] = React.useState(\n    defaultLeaderboardName\n  );\n\n  const [response, loading, error] = useGet(\n    playerNameQuery ? `lookup/${playerNameQuery}/${leaderboardNameQuery}` : ''\n  );\n\n  console.log('got data', response?.data, loading, error);\n\n  return (\n    <ThemeProvider theme={MUITheme}>\n      <div className={classes.app}>\n        <div className={classes.pageContent}>\n          <div className={classes.backgroundImageContainer}>\n            <img\n              src=\"/static/background.jpg\"\n              className={classes.backgroundImage}\n              alt=\"bg\"\n            />\n          </div>\n          <div className={classes.playerNameInputContainer}>\n            <PlayerLookupInput\n              isLoading={loading}\n              onSubmit={(playerName, leaderboardName) => {\n                setPlayerNameQuery(playerName);\n                setLeaderboardNameQuery(leaderboardName);\n                window.location.hash = `${playerName},${leaderboardName}`;\n              }}\n              defaultName={defaultPlayerName}\n              defaultLeaderboardName={defaultLeaderboardName}\n            />\n          </div>\n          <div className={classes.infoContainer}>\n            {!loading ? (\n              <PlayerInfo\n                playerName={response?.data.player_name}\n                leaderboardName={leaderboardNameQuery}\n                numRecords={\n                  Object.keys(response?.data.tracker.records || {}).length\n                }\n              />\n            ) : null}\n          </div>\n          <div className={classes.tableContainer}>\n            <div className={classes.tableSize}>\n              {playerNameQuery ? (\n                <PlayerRecordsTable\n                  loading={loading}\n                  error={error}\n                  data={response?.data}\n                />\n              ) : null}\n            </div>\n          </div>\n          <header className={classes.appHeader}>\n            <div className={classes.headerSize}>\n              <div className={classes.headerLeft}>\n                AOE2: DE Head2Head - Matchup Tracker\n              </div>\n              <div className={classes.headerRight}>\n                <img\n                  src=\"static/aoe2net.png\"\n                  alt=\"aoe2net\"\n                  title=\"aoe2.net\"\n                  className={classes.headerIcon}\n                  onClick={() => {\n                    window.open('https://aoe2.net/');\n                  }}\n                ></img>\n                <img\n                  src=\"static/github.png\"\n                  alt=\"github\"\n                  title=\"github\"\n                  className={classes.headerIcon}\n                  onClick={() => {\n                    window.open(\n                      'https://github.com/benjamin-t-brown/aoe2de_head2head'\n                    );\n                  }}\n                ></img>\n              </div>\n            </div>\n          </header>\n          <footer className={classes.appFooter}>\n            This site is not affiliated with or endorsed by Microsoft\n            Corporation. Age of Empires II: Definitive Edition is a trademark or\n            registered trademark of Microsoft Corporation in the U.S. and other\n            countries.\n          </footer>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}