{"version":3,"sources":["theme.ts","components/PlayerNameLink.tsx","components/PlayerRecordsTable.tsx","utils.ts","elements/Button.tsx","elements/TextInput.tsx","components/PlayerLookupInput.tsx","components/PlayerInfo.tsx","components/CurrentGameInfo.tsx","hooks/axiosHooks.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["palette","primary","main","secondary","status","danger","success","warning","neutral","info","typography","link","highlight","breakpoints","values","xs","sm","md","lg","xl","usePlayerNameLinkStyles","makeStyles","cursor","color","theme","textDecoration","linkLight","PlayerNameLink","props","classes","url","playerId","target","rel","title","playerName","className","light","href","StyledTableCell","withStyles","head","backgroundColor","body","fontSize","isDarkMode","spreadProps","TableCell","StyledTableRow","root","TableRow","StyledTextField","borderBottomColor","TextField","SortDirectionIcon","sortDirection","style","height","position","top","useStyles","table","minWidth","tableHeadCell","filter","error","background","padding","playerNameCell","display","alignItems","searchIcon","marginRight","preHeader","justifyContent","leftPreHeader","filterName","borderRadius","marginBottom","darkMode","pagination","PlayerRecordsTable","React","useState","sortColumn","setSortColumn","setSortDirection","nameFilter","setNameFilter","pageIndex","setPageIndex","localStorage","getItem","setIsDarkMode","handleTableHeaderClick","nextSortColumn","loading","CircularProgress","data","window","numberOfPages","Math","ceil","Object","keys","tracker","records","length","profileIds","players","maxRowsPerPage","profileId","record","wins_against","losses_to","name","toLowerCase","includes","sort","a","b","playerA","recordA","playerB","recordB","columnA","columnB","rating","slice","sortAndPaginate","Pagination","count","page","onChange","_","shape","htmlFor","id","type","checked","setItem","toString","label","value","ev","TableContainer","component","Paper","Table","aria-label","TableHead","onClick","align","TableBody","map","player","key","scope","location","hash","leaderboardName","steam_id","profile_id","Date","last_played_against","toLocaleString","getNameAndLeaderboardFromHash","defaultPlayerName","decodeURIComponent","split","defaultLeaderboardName","Button","variant","disabled","children","StyledInput","Input","TextInput","placeholder","onKeyDown","inputProps","maxLength","startAdornment","InputAdornment","StyledFormLabel","FormLabel","width","boxShadow","PlayerLookupInput","defaultName","setPlayerName","setLeaderboardName","useEffect","onHashChange","newHash","newURL","indexOf","newPlayerName","addEventListener","removeEventListener","which","isLoading","onSubmit","trim","FormControl","RadioGroup","FormControlLabel","control","Radio","usePlayerInfoStyles","subRoot","lineHeight","playerLink","PlayerInfo","numRecords","numGames","toUpperCase","useCurrentGameInfoStyles","overflow","tableContainer","marginTop","inProgress","victory","loss","cell","CurrentGameInfo","matchId","isWin","textAlign","otherTeamPlayers","otherTeamPlayer","i","myTeamPlayer","myTeamPlayers","BASE_URL","origin","cache","outgoingRequests","api","axios","create","baseURL","getCacheKey","paramsStr","MUITheme","createMuiTheme","useAppStyles","app","appHeader","headerSize","headerLeft","headerRight","headerIcon","marginLeft","transition","pageContent","backgroundImageContainer","backgroundImage","zIndex","opacity","up","playerNameInputContainer","currentGameContainer","infoContainer","tableSize","errorText","appFooter","bottom","margin","skipNextHashChange","App","playerNameQuery","setPlayerNameQuery","leaderboardNameQuery","setLeaderboardNameQuery","oldURL","hostname","newLeaderboard","getApiUrl","apiUrl","params","setData","setLoading","setError","cacheKey","JSON","stringify","cachedData","get","response","console","requestData","useGet","ThemeProvider","src","alt","most_recent_game","gameResponse","myTeamId","reduce","prev","curr","won","team","match_id","finished","date","started","gameResponseToProps","player_name","wins","losses","open","Boolean","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["export const ColorPrimary = '#794C39';\nexport const ColorSecondary = '#2A2C2D';\n\nexport const ColorHeader = '#C39568';\nexport const ColorBackground = '#9e7853';\n\nconst ColorLink = '#005DFF';\nconst ColorHighlight = '#B3D6FF';\n\nconst ColorDanger = '#cc412f';\nconst ColorSuccess = '#69af69';\nconst ColorWarning = '#C39568';\nconst ColorNeutral = '#98a6ad';\nconst ColorInfo = '#794C39';\n\nexport default {\n  palette: {\n    primary: {\n      main: ColorPrimary,\n    },\n    secondary: {\n      main: ColorSecondary,\n    },\n    status: {\n      danger: ColorDanger,\n      success: ColorSuccess,\n      warning: ColorWarning,\n      neutral: ColorNeutral,\n      info: ColorInfo,\n    },\n    typography: {\n      link: ColorLink,\n      highlight: ColorHighlight,\n    } as any,\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 960,\n      lg: 1280,\n      xl: 2048,\n    },\n  },\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport theme from '../theme';\n\nexport interface PlayerNameLinkProps {\n  playerName: string;\n  playerId: string;\n  light?: boolean;\n}\n\nconst usePlayerNameLinkStyles = makeStyles({\n  link: {\n    cursor: 'pointer',\n    color: theme.palette.typography.link,\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n  linkLight: {\n    cursor: 'pointer',\n    color: '#adf',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n});\n\nconst PlayerNameLink = (props: PlayerNameLinkProps) => {\n  const classes = usePlayerNameLinkStyles();\n  let url = `https://aoe2.net/#profile-${props.playerId}`;\n  return (\n    <a\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      title={`aoe2.net: ${props.playerName}`}\n      className={props.light ? classes.linkLight : classes.link}\n      href={url}\n    >\n      {props.playerName}\n    </a>\n  );\n};\n\nexport default PlayerNameLink;\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Pagination from '@material-ui/lab/Pagination';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport {\n  LookupQueryResult,\n  LookupQueryRecordResult,\n  LookupQueryPlayerResult,\n} from '../hooks/axiosHooks';\nimport theme from '../theme';\nimport PlayerNameLink from './PlayerNameLink';\nimport TextField from '@material-ui/core/TextField';\n\nconst SORT_DIR_ASC = 'asc';\nconst SORT_DIR_DSC = 'dsc';\n\nconst DARK_MODE_LS_KEY = 'aoe2de-player-tracker-dark-mode';\n\nconst StyledTableCell = withStyles({\n  head: {\n    backgroundColor: theme.palette.primary.main,\n    color: 'white',\n  },\n  body: {\n    fontSize: 14,\n    color: (props: any) => {\n      return props.isDarkMode ? 'white' : 'black';\n    },\n  },\n})((props: any) => {\n  const spreadProps = {\n    ...props,\n  };\n  delete spreadProps.isDarkMode;\n  return <TableCell {...spreadProps} />;\n});\n\nconst StyledTableRow = withStyles({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: (props: any) => {\n        return props.isDarkMode ? '#480a08' : '#fafafa';\n      },\n    },\n    '&:nth-of-type(even)': {\n      backgroundColor: (props: any) => {\n        return props.isDarkMode ? '#491c09' : '#fff';\n      },\n    },\n  },\n})((props: any) => {\n  const spreadProps = {\n    ...props,\n  };\n  delete spreadProps.isDarkMode;\n  return <TableRow {...spreadProps} />;\n});\n\nconst StyledTextField = withStyles({\n  root: {\n    '& label': {\n      color: '#BEBEBE',\n    },\n    '&:hover': {\n      borderBottomColor: 'white',\n    },\n    '& input': {\n      color: 'white',\n    },\n    '& label.Mui-focused': {\n      color: '#EFEFEF',\n    },\n    '& .MuiInput-underline:hover': {\n      borderBottomColor: 'white',\n    },\n    '& .MuiInput-underline:before': {\n      borderBottomColor: 'white',\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'white',\n    },\n  },\n})(TextField);\n\nconst SortDirectionIcon = ({ sortDirection }: { sortDirection: string }) => {\n  const style = {\n    height: '16px',\n    position: 'relative',\n    top: '2px',\n  } as any;\n  return sortDirection === SORT_DIR_DSC ? (\n    <ArrowDownward style={style} />\n  ) : (\n    <ArrowUpward style={style} />\n  );\n};\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n  tableHeadCell: {\n    cursor: 'pointer',\n    '&:hover': {\n      filter: 'brightness(120%)',\n    },\n  },\n  error: {\n    color: theme.palette.status.danger,\n    background: theme.palette.secondary.main,\n    padding: '1rem',\n  },\n  playerNameCell: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  searchIcon: {\n    fontSize: '16px',\n    position: 'relative',\n    top: '3px',\n    marginRight: '5px',\n  },\n  preHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  leftPreHeader: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    position: 'relative',\n    top: '18px',\n  },\n  filterName: {\n    position: 'relative',\n    padding: '5px',\n    borderRadius: '5px',\n    marginBottom: '2px',\n    background: theme.palette.primary.main,\n  },\n  darkMode: {\n    marginBottom: '5px',\n    display: 'flex',\n    alignItems: 'flex-end',\n  },\n  pagination: {\n    marginBottom: '5px',\n    marginRight: '5px',\n    position: 'relative',\n    top: '-5px',\n  },\n});\n\ninterface PlayerRecordsTableProps {\n  data?: LookupQueryResult;\n  loading?: boolean;\n  error?: boolean;\n  leaderboardName: string;\n}\n\nconst sortAndPaginate = (\n  records: { [profile_id: string]: LookupQueryRecordResult },\n  players: { [profile_id: string]: LookupQueryPlayerResult },\n  sortColumn: string,\n  sortDirection: 'dsc' | 'asc',\n  pageIndex: number,\n  maxRowsPerPage: number,\n  nameFilter: string\n): string[] => {\n  return Object.keys(records)\n    .filter(profileId => {\n      const record = records[profileId];\n      return record.wins_against + record.losses_to > 0;\n    })\n    .filter(profileId => {\n      if (nameFilter) {\n        const player = players[profileId];\n        return player.name.toLowerCase().includes(nameFilter.toLowerCase());\n      } else {\n        return true;\n      }\n    })\n    .sort((a, b) => {\n      const playerA = players[a];\n      const recordA = records[a];\n\n      const playerB = players[b];\n      const recordB = records[b];\n\n      let columnA = recordA[sortColumn];\n      let columnB = recordB[sortColumn];\n\n      if (sortColumn === 'name') {\n        columnA = playerA.name.toLowerCase();\n        columnB = playerB.name.toLowerCase();\n      } else if (sortColumn === 'num_games') {\n        columnA = recordA.wins_against + recordA.losses_to;\n        columnB = recordB.wins_against + recordB.losses_to;\n      }\n      if (sortColumn === 'rating') {\n        columnA = playerA.rating;\n        columnB = playerB.rating;\n      }\n\n      if (sortDirection === SORT_DIR_ASC) {\n        return columnA < columnB ? -1 : 1;\n      } else if (sortDirection === SORT_DIR_DSC) {\n        return columnA < columnB ? 1 : -1;\n      } else {\n        return 0;\n      }\n    })\n    .slice(\n      pageIndex * maxRowsPerPage,\n      pageIndex * maxRowsPerPage + maxRowsPerPage\n    );\n};\n\nconst PlayerRecordsTable = (props: PlayerRecordsTableProps) => {\n  const [sortColumn, setSortColumn] = React.useState('last_played_against');\n  const [sortDirection, setSortDirection] = React.useState(\n    SORT_DIR_DSC as 'asc' | 'dsc'\n  );\n  const [nameFilter, setNameFilter] = React.useState('');\n  const [pageIndex, setPageIndex] = React.useState(0);\n  const [isDarkMode, setIsDarkMode] = React.useState(\n    localStorage.getItem(DARK_MODE_LS_KEY) === 'true'\n  );\n  const maxRowsPerPage = 75;\n  const classes = useStyles(props);\n\n  const handleTableHeaderClick = (nextSortColumn: string) => {\n    if (nextSortColumn === sortColumn) {\n      setSortDirection(\n        sortDirection === SORT_DIR_ASC ? SORT_DIR_DSC : SORT_DIR_ASC\n      );\n    } else {\n      if (nextSortColumn === 'name') {\n        setSortDirection(SORT_DIR_ASC);\n      } else {\n        setSortDirection(SORT_DIR_DSC);\n      }\n      setSortColumn(nextSortColumn);\n    }\n  };\n\n  if (props.loading) {\n    return <CircularProgress />;\n  }\n\n  if (props.error || !props.data) {\n    return (\n      <div className={classes.error}>\n        No player exists with searched name on the given leaderboard.\n      </div>\n    );\n  }\n\n  const data = props.data as LookupQueryResult;\n  (window as any).data = data;\n\n  const numberOfPages = Math.ceil(\n    Object.keys(data.tracker.records).length / maxRowsPerPage\n  );\n\n  const profileIds = sortAndPaginate(\n    data.tracker.records,\n    data.tracker.players,\n    sortColumn,\n    sortDirection,\n    pageIndex,\n    maxRowsPerPage,\n    nameFilter\n  );\n\n  return (\n    <div>\n      <div className={classes.preHeader}>\n        <div className={classes.leftPreHeader}>\n          {numberOfPages > 1 ? (\n            <Pagination\n              className={classes.pagination}\n              count={numberOfPages}\n              page={pageIndex + 1}\n              onChange={(_, page) => {\n                setPageIndex(page - 1);\n              }}\n              shape=\"rounded\"\n            />\n          ) : null}\n          <span className={classes.darkMode}>\n            <label htmlFor=\"dark-mode\">Use Dark Table</label>\n            <input\n              id=\"dark-mode\"\n              name=\"dark-mode\"\n              type=\"checkbox\"\n              checked={isDarkMode}\n              onChange={() => {\n                setIsDarkMode(!isDarkMode);\n                localStorage.setItem(\n                  DARK_MODE_LS_KEY,\n                  (!isDarkMode).toString()\n                );\n              }}\n            />\n          </span>\n        </div>\n        <div className={classes.filterName}>\n          <StyledTextField\n            label=\"Filter\"\n            value={nameFilter}\n            onChange={ev => {\n              setNameFilter(ev.target.value);\n            }}\n          />\n        </div>\n      </div>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell\n                onClick={() => {\n                  handleTableHeaderClick('name');\n                }}\n                className={classes.tableHeadCell}\n                align=\"center\"\n              >\n                Player Name{' '}\n                {sortColumn === 'name' ? (\n                  <SortDirectionIcon sortDirection={sortDirection} />\n                ) : (\n                  ''\n                )}\n              </StyledTableCell>\n              <StyledTableCell\n                onClick={() => {\n                  handleTableHeaderClick('rating');\n                }}\n                className={classes.tableHeadCell}\n                align=\"center\"\n              >\n                Rating Last Played{' '}\n                {sortColumn === 'rating' ? (\n                  <SortDirectionIcon sortDirection={sortDirection} />\n                ) : (\n                  ''\n                )}\n              </StyledTableCell>\n              <StyledTableCell\n                onClick={() => {\n                  handleTableHeaderClick('num_games');\n                }}\n                className={classes.tableHeadCell}\n                align=\"center\"\n              >\n                Num Games{' '}\n                {sortColumn === 'num_games' ? (\n                  <SortDirectionIcon sortDirection={sortDirection} />\n                ) : (\n                  ''\n                )}\n              </StyledTableCell>\n              <StyledTableCell\n                onClick={() => {\n                  handleTableHeaderClick('wins_against');\n                }}\n                className={classes.tableHeadCell}\n                align=\"center\"\n              >\n                Wins Against{' '}\n                {sortColumn === 'wins_against' ? (\n                  <SortDirectionIcon sortDirection={sortDirection} />\n                ) : (\n                  ''\n                )}\n              </StyledTableCell>\n              <StyledTableCell\n                onClick={() => {\n                  handleTableHeaderClick('losses_to');\n                }}\n                className={classes.tableHeadCell}\n                align=\"center\"\n              >\n                Losses To{' '}\n                {sortColumn === 'losses_to' ? (\n                  <SortDirectionIcon sortDirection={sortDirection} />\n                ) : (\n                  ''\n                )}\n              </StyledTableCell>\n              <StyledTableCell\n                onClick={() => {\n                  handleTableHeaderClick('last_played_against');\n                }}\n                className={classes.tableHeadCell}\n                align=\"center\"\n              >\n                Last Played{' '}\n                {sortColumn === 'last_played_against' ? (\n                  <SortDirectionIcon sortDirection={sortDirection} />\n                ) : (\n                  ''\n                )}\n              </StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {profileIds.map(profileId => {\n              const player = data.tracker.players[profileId];\n              const record = data.tracker.records[profileId];\n\n              return (\n                <StyledTableRow key={profileId} isDarkMode={isDarkMode}>\n                  <StyledTableCell\n                    component=\"td\"\n                    scope=\"row\"\n                    isDarkMode={isDarkMode}\n                  >\n                    <span title={`Lookup head2head for: \"${player.name}\"`}>\n                      <SearchIcon\n                        className={classes.searchIcon}\n                        onClick={() => {\n                          window.location.hash = `${player.name},${props.leaderboardName}`;\n                        }}\n                      />\n                    </span>\n                    <PlayerNameLink\n                      playerId={player.steam_id || player.profile_id}\n                      playerName={player.name}\n                      light={isDarkMode}\n                    />\n                  </StyledTableCell>\n                  <StyledTableCell\n                    component=\"td\"\n                    scope=\"row\"\n                    isDarkMode={isDarkMode}\n                  >\n                    {player.rating}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"right\" isDarkMode={isDarkMode}>\n                    {record.wins_against + record.losses_to}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"right\" isDarkMode={isDarkMode}>\n                    {record.wins_against}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"right\" isDarkMode={isDarkMode}>\n                    {record.losses_to}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"right\" isDarkMode={isDarkMode}>\n                    {new Date(\n                      record.last_played_against + 'z'\n                    ).toLocaleString()}\n                  </StyledTableCell>\n                </StyledTableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default PlayerRecordsTable;\n","export const getNameAndLeaderboardFromHash = (hash: string) => {\n  hash = decodeURIComponent(hash);\n  const defaultPlayerName = hash.slice(1).split(',')[0].slice(0, 25) || '';\n  let defaultLeaderboardName = hash.slice(1).split(',')[1];\n  if (defaultLeaderboardName !== 'solo' && defaultLeaderboardName !== 'team') {\n    defaultLeaderboardName = '';\n  }\n  return [defaultPlayerName, defaultLeaderboardName];\n};\n","import React from 'react';\nimport ButtonMui from '@material-ui/core/Button';\n\nexport interface ButtonProps {\n  type: 'inherit' | 'primary' | 'secondary' | 'default' | undefined;\n  disabled?: boolean;\n  children?: React.ReactNode;\n  onClick?: (ev: React.SyntheticEvent) => void;\n}\n\nconst Button = (props: ButtonProps): JSX.Element => {\n  return (\n    <ButtonMui\n      variant=\"contained\"\n      onClick={props.onClick}\n      disabled={props.disabled}\n      color={props.type}\n    >\n      {props.children}\n    </ButtonMui>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport Input from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { withStyles } from '@material-ui/core';\n\ninterface InputProps {\n  value?: string;\n  placeholder?: string;\n  onChange?: (ev?: React.SyntheticEvent) => void;\n  onKeyDown?: (ev?: React.SyntheticEvent) => void;\n  showSearchIcon?: boolean;\n}\n\nconst StyledInput = withStyles(() => ({\n  root: {\n    background: 'white',\n  },\n}))(Input);\n\nconst TextInput = (props: InputProps): JSX.Element => {\n  const { value, placeholder, onChange, onKeyDown } = props;\n  return (\n    <StyledInput\n      type=\"text\"\n      value={value}\n      placeholder={placeholder}\n      onChange={onChange}\n      onKeyDown={onKeyDown}\n      inputProps={{\n        maxLength: 25,\n      }}\n      startAdornment={\n        <InputAdornment position=\"start\">\n          <SearchIcon />\n        </InputAdornment>\n      }\n    ></StyledInput>\n  );\n};\n\nexport default TextInput;\n","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { getNameAndLeaderboardFromHash } from '../utils';\nimport Button from '../elements/Button';\nimport TextInput from '../elements/TextInput';\n\nconst StyledFormLabel = withStyles(() => ({\n  root: {\n    color: 'black',\n    '&.Mui-focused': {\n      color: 'black',\n    },\n  },\n}))(FormLabel);\n\nconst useStyles = makeStyles(() => {\n  return {\n    root: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      width: '550px',\n      padding: '10px',\n      background: 'rgba(0, 0, 0, 0.1)',\n      boxShadow: '0px 0px 5px 4px rgba(0, 0, 0, 0.1)',\n    },\n  };\n});\n\ninterface PlayerLookupInputProps {\n  onSubmit: (playerName: string, leaderboardName: string) => void;\n  isLoading: boolean;\n  defaultName?: string;\n  defaultLeaderboardName?: string;\n}\n\nconst PlayerLookupInput = (props: PlayerLookupInputProps) => {\n  const [playerName, setPlayerName] = React.useState(props.defaultName || '');\n  const [leaderboardName, setLeaderboardName] = React.useState(\n    props.defaultLeaderboardName || 'solo'\n  );\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    const onHashChange = (ev: HashChangeEvent) => {\n      const newHash = ev.newURL.slice(ev.newURL.indexOf('#'));\n      const [newPlayerName] = getNameAndLeaderboardFromHash(newHash);\n      setPlayerName(newPlayerName);\n    };\n    window.addEventListener('hashchange', onHashChange);\n    return () => {\n      window.removeEventListener('hashchange', onHashChange);\n    };\n  });\n\n  const handleLeaderboardNameClick = (ev: React.SyntheticEvent) => {\n    setLeaderboardName((ev.target as HTMLInputElement).value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextInput\n        value={playerName}\n        onChange={ev => {\n          setPlayerName((ev?.target as HTMLInputElement).value);\n        }}\n        onKeyDown={ev => {\n          if (\n            (ev as any).which === 13 &&\n            !(props.isLoading || playerName.length < 3)\n          ) {\n            props.onSubmit(playerName.trim(), leaderboardName);\n          }\n        }}\n      />\n      <div>\n        <FormControl component=\"fieldset\">\n          <StyledFormLabel>Leaderboard</StyledFormLabel>\n          <RadioGroup\n            aria-label=\"leaderboard\"\n            name=\"leaderboard1\"\n            value={leaderboardName}\n            onChange={handleLeaderboardNameClick}\n          >\n            <FormControlLabel value=\"solo\" control={<Radio />} label=\"Solo\" />\n            <FormControlLabel value=\"team\" control={<Radio />} label=\"Team\" />\n          </RadioGroup>\n        </FormControl>\n      </div>\n      <Button\n        type=\"primary\"\n        disabled={props.isLoading || playerName.length < 3}\n        onClick={() => {\n          props.onSubmit(playerName, leaderboardName);\n        }}\n      >\n        Search\n      </Button>\n    </div>\n  );\n};\n\nexport default PlayerLookupInput;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PlayerNameLink from './PlayerNameLink';\n\nconst usePlayerInfoStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  subRoot: {\n    padding: '10px',\n    width: '550px',\n    background: 'rgba(0, 0, 0, 0.1)',\n    boxShadow: '0px 0px 5px 4px rgba(0, 0, 0, 0.1)',\n    color: 'white',\n    lineHeight: '2',\n  },\n  playerLink: {\n    background: 'rgba(255, 255, 255, 0.5)',\n    borderRadius: '5px',\n    padding: '5px',\n    color: 'black',\n  },\n});\n\ninterface PlayerInfoProps {\n  playerName: string;\n  playerId: string;\n  leaderboardName: string;\n  numRecords: number;\n  numGames: number;\n}\n\nconst PlayerInfo = (props: PlayerInfoProps) => {\n  const classes = usePlayerInfoStyles();\n\n  if (props.numRecords === 0) {\n    return <div></div>;\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.subRoot}>\n        {props.numGames} games, {props.numRecords} opponents, leaderboard{' '}\n        <span className={classes.playerLink}>\n          {props.leaderboardName.toUpperCase()}\n        </span>{' '}\n        for player{' '}\n        <span className={classes.playerLink}>\n          <PlayerNameLink\n            playerId={props.playerId}\n            playerName={props.playerName}\n          />\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerInfo;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport theme from '../theme';\nimport PlayerNameLink from './PlayerNameLink';\n\nconst useCurrentGameInfoStyles = makeStyles({\n  root: {\n    padding: '10px',\n    background: 'rgba(0, 0, 0, 0.1)',\n    boxShadow: '0px 0px 5px 4px rgba(0, 0, 0, 0.1)',\n    width: '550px',\n    overflow: 'hidden',\n  },\n  tableContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  table: {\n    background: 'rgba(0, 0, 0, 0.4)',\n    boxShadow: '0px 0px 5px 4px rgba(0, 0, 0, 0.4)',\n    padding: '10px',\n    marginTop: '16px',\n    color: 'white',\n  },\n  inProgress: {\n    color: theme.palette.status.neutral,\n    background: 'black',\n    padding: '5px',\n    borderRadius: '5px',\n  },\n  victory: {\n    color: theme.palette.status.success,\n    background: 'black',\n    padding: '5px',\n    borderRadius: '5px',\n  },\n  loss: {\n    color: theme.palette.status.danger,\n    background: 'black',\n    padding: '5px',\n    borderRadius: '5px',\n  },\n  cell: {\n    padding: '5px',\n  },\n});\n\ninterface Player {\n  name: string;\n  profileId: string;\n  rating: number;\n}\n\ninterface CurrentGameInfoProps {\n  playerId: string;\n  matchId: string;\n  playerName: string;\n  inProgress: boolean;\n  isWin: boolean;\n  myTeamPlayers: Player[];\n  otherTeamPlayers: Player[];\n  date: string;\n}\n\nexport const gameResponseToProps = (\n  playerId: string,\n  gameResponse: any\n): CurrentGameInfoProps => {\n  let playerName = playerId;\n  let isWin = null;\n  const myTeamId = gameResponse.players.reduce((prev: number, curr: any) => {\n    if (curr.profile_id === playerId) {\n      playerName = curr.name;\n      isWin = curr.won;\n      return curr.team;\n    } else {\n      return prev;\n    }\n  }, 1);\n  const myTeamPlayers = gameResponse.players\n    .filter((player: any) => {\n      return player.team === myTeamId;\n    })\n    .map((player: any) => {\n      return {\n        profileId: player.profile_id,\n        name: player.name,\n        rating: player.rating,\n      };\n    });\n  const otherTeamPlayers = gameResponse.players\n    .filter((player: any) => {\n      return player.team !== myTeamId;\n    })\n    .map((player: any) => {\n      return {\n        profileId: player.profile_id,\n        name: player.name,\n        rating: player.rating,\n      };\n    });\n\n  return {\n    playerId,\n    playerName,\n    matchId: gameResponse.match_id,\n    inProgress: isWin === null ? true : !gameResponse.finished,\n    isWin: !!isWin,\n    myTeamPlayers,\n    otherTeamPlayers,\n    date: new Date(gameResponse.started * 1000).toLocaleString(),\n  };\n};\n\nconst CurrentGameInfo = (props: CurrentGameInfoProps) => {\n  const classes = useCurrentGameInfoStyles();\n  return (\n    <div className={classes.root}>\n      Most Recent Game{' '}\n      {props.inProgress ? (\n        <>\n          <span className={classes.inProgress}>In Progress</span>{' '}\n          <span> Game Id: {props.matchId}</span>\n        </>\n      ) : null}\n      {!props.inProgress && props.isWin ? (\n        <span className={classes.victory}>Victory</span>\n      ) : null}\n      {!props.inProgress && !props.isWin ? (\n        <span className={classes.loss}>Loss</span>\n      ) : null}\n      <div className={classes.tableContainer}>\n        <table className={classes.table}>\n          <thead>\n            <tr>\n              <th\n                style={{\n                  minWidth: '180px',\n                  textAlign: 'left',\n                }}\n              >\n                {props.playerName}'s Team\n              </th>\n              <th>Opposing Team</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.otherTeamPlayers.map(\n              (otherTeamPlayer: Player, i: number) => {\n                const myTeamPlayer = props.myTeamPlayers[i];\n                return (\n                  <tr key={'row-' + i}>\n                    <td className={classes.cell} style={{ textAlign: 'left' }}>\n                      <PlayerNameLink\n                        playerId={myTeamPlayer.profileId}\n                        playerName={`${myTeamPlayer.name} (${myTeamPlayer.rating})`}\n                        light\n                      />\n                    </td>\n                    <td className={classes.cell} style={{ textAlign: 'right' }}>\n                      <PlayerNameLink\n                        playerId={otherTeamPlayer.profileId}\n                        playerName={`${otherTeamPlayer.name} (${otherTeamPlayer.rating})`}\n                        light\n                      />\n                    </td>\n                  </tr>\n                );\n              }\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default CurrentGameInfo;\n","import { useState, useEffect } from 'react';\nimport axios, { AxiosResponse } from 'axios';\n\nconst BASE_URL = window.location.origin;\nconst LOG_REQUESTS = (process.env as any).NODE_ENV === 'development';\n\nexport interface LookupQueryParams {\n  playerName: string;\n  leaderboardName: string;\n}\n\nexport interface LookupQueryPlayerResult {\n  profile_id: string;\n  rating: string;\n  steam_id: string;\n  name: string;\n}\n\nexport interface LookupQueryRecordResult {\n  profile_id: string;\n  last_played_against: string;\n  losses_to: number;\n  wins_against: number;\n}\n\nexport interface LookupQueryResult {\n  error?: string;\n  leaderboard_id: number;\n  leaderboard_name: string;\n  player_name: string;\n  profile_id: string;\n  tracker: {\n    wins: number;\n    losses: number;\n    players: {\n      [profile_id: string]: LookupQueryPlayerResult;\n    };\n    records: {\n      [profile_id: string]: LookupQueryRecordResult;\n    };\n  };\n}\nlet cache = {};\n\nconst outgoingRequests = {};\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n});\n\nexport const getCacheKey = (\n  type: string,\n  url: string,\n  paramsStr?: string\n): string => {\n  return type + '/' + url + '/' + (paramsStr || '');\n};\n\nexport const clearCache = (key?: string): boolean => {\n  if (key) {\n    if (cache[key]) {\n      delete cache[key];\n      return true;\n    }\n    return false;\n  } else {\n    cache = {};\n    return true;\n  }\n};\n\nexport const useGet = function <QueryParamsType>(\n  apiUrl: string,\n  params?: QueryParamsType\n): [AxiosResponse | null, boolean, boolean, string] {\n  const [data, setData] = useState<AxiosResponse | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const requestData = async () => {\n      if (!apiUrl) {\n        setData(null);\n        setLoading(false);\n        setError(false);\n        return;\n      }\n      const cacheKey = getCacheKey('GET', apiUrl, JSON.stringify(params));\n      const cachedData = cache[cacheKey];\n      if (cachedData) {\n        setData(cachedData);\n        setLoading(false);\n        setError(false);\n      } else if (!outgoingRequests[cacheKey]) {\n        try {\n          outgoingRequests[cacheKey] = true;\n          setLoading(true);\n          const response = await api.get(apiUrl, {\n            params,\n          });\n          if (LOG_REQUESTS) {\n            console.log('get', cacheKey, response.data);\n          }\n          setData(response);\n          setError(false);\n          setLoading(false);\n          outgoingRequests[cacheKey] = false;\n          cache[cacheKey] = response;\n        } catch (e) {\n          console.error('Failed to get', e);\n          setError(true);\n          setLoading(false);\n          setData(null);\n        }\n      }\n    };\n    requestData();\n  }, [apiUrl, params]);\n\n  const cacheKey = getCacheKey('GET', apiUrl, JSON.stringify(params));\n  return [data, loading, error, cacheKey];\n};\n\nexport const usePost = function <QueryParamsType, BodyParamsType>(\n  apiUrl: string,\n  params?: QueryParamsType,\n  body?: BodyParamsType\n): [AxiosResponse | null, boolean, boolean, string] {\n  const [data, setData] = useState<AxiosResponse | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const requestData = async () => {\n      if (!apiUrl) {\n        setLoading(false);\n        setError(false);\n        return;\n      }\n      const cacheKey = getCacheKey(\n        'POST',\n        apiUrl,\n        '[' + JSON.stringify(params) + ',' + JSON.stringify(body) + ']'\n      );\n      const cachedData = cache[cacheKey];\n      if (cachedData) {\n        setData(cachedData);\n        setLoading(false);\n        setError(false);\n      } else if (!outgoingRequests[cacheKey]) {\n        try {\n          outgoingRequests[cacheKey] = true;\n          setLoading(true);\n          const response = await api.post(apiUrl, {\n            params,\n            body,\n          });\n          if (LOG_REQUESTS) {\n            console.log('post', cacheKey, response.data);\n          }\n          setData(response);\n          setLoading(false);\n          setError(false);\n          outgoingRequests[cacheKey] = false;\n          cache[cacheKey] = response;\n        } catch (e) {\n          console.error('Failed to post', e);\n          setError(true);\n          setData(null);\n          setLoading(false);\n        }\n      }\n    };\n    requestData();\n  }, [apiUrl, params, body]);\n\n  const cacheKey = getCacheKey(\n    'POST',\n    apiUrl,\n    '[' + JSON.stringify(params) + ',' + JSON.stringify(body) + ']'\n  );\n  return [data, loading, error, cacheKey];\n};\n","import React from 'react';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  makeStyles,\n} from '@material-ui/core/styles';\nimport theme, { ColorHeader } from './theme';\nimport PlayerRecordsTable from './components/PlayerRecordsTable';\nimport PlayerLookupInput from './components/PlayerLookupInput';\nimport PlayerInfo from './components/PlayerInfo';\nimport CurrentGameInfo, {\n  gameResponseToProps,\n} from './components/CurrentGameInfo';\nimport { useGet, clearCache, getCacheKey } from './hooks/axiosHooks';\nimport { getNameAndLeaderboardFromHash } from './utils';\n\nconst MUITheme = createMuiTheme(theme);\n\nconst useAppStyles = makeStyles(theme => {\n  return {\n    app: {\n      textAlign: 'center',\n      position: 'relative',\n    },\n    appHeader: {\n      fontSize: '1.5rem',\n      color: 'black',\n      display: 'flex',\n      justifyContent: 'center',\n      position: 'fixed',\n      top: '0px',\n      width: '100%',\n      background: ColorHeader,\n    },\n    headerSize: {\n      position: 'relative',\n      height: '50px',\n      minWidth: '1000px',\n      display: 'flex',\n      justifyContent: 'space-between',\n    },\n    headerLeft: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      height: '100%',\n      color: 'white',\n      padding: '0px 10px',\n      background: 'rgba(0, 0, 0, 0.1)',\n      boxShadow: '0px -4px 5px 4px rgba(0, 0, 0, 0.1)',\n    },\n    headerRight: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      height: '100%',\n    },\n    headerIcon: {\n      width: '24px',\n      cursor: 'pointer',\n      marginLeft: '10px',\n      borderRadius: '24px',\n      background: 'rgba(0, 0, 0, 0.1)',\n      boxShadow: '0px 0px 5px 4px rgba(0, 0, 0, 0.1)',\n      transition: 'background 0.5s, box-shadow 0.5s',\n      '&:hover': {\n        background: 'rgba(0, 0, 0, 0.3)',\n        boxShadow: '0px 0px 5px 4px rgba(0, 0, 0, 0.3)',\n      },\n    },\n    pageContent: {\n      marginTop: '50px',\n    },\n    backgroundImageContainer: {\n      display: 'flex',\n      justifyContent: 'center',\n    },\n    backgroundImage: {\n      position: 'fixed',\n      zIndex: -1,\n      opacity: 0.25,\n      [theme.breakpoints.up('xl')]: {\n        width: '3072px',\n      },\n    },\n    playerNameInputContainer: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginTop: '2rem',\n    },\n    currentGameContainer: {\n      marginTop: '2rem',\n      display: 'flex',\n      justifyContent: 'center',\n    },\n    infoContainer: {\n      marginTop: '2rem',\n    },\n    tableContainer: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginTop: '2rem',\n    },\n    tableSize: {\n      minWidth: '1000px',\n      marginBottom: '5rem',\n    },\n    errorText: {\n      color: theme.palette.error.main,\n    },\n    appFooter: {\n      position: 'absolute',\n      bottom: 0,\n      margin: '2rem',\n      width: 'calc(100% - 4rem)',\n    },\n  };\n});\n\nlet skipNextHashChange = false;\nconst App = (): JSX.Element => {\n  const classes = useAppStyles();\n\n  const [\n    defaultPlayerName,\n    defaultLeaderboardName,\n  ] = getNameAndLeaderboardFromHash(window.location.hash);\n\n  const [playerNameQuery, setPlayerNameQuery] = React.useState(\n    defaultPlayerName\n  );\n  const [leaderboardNameQuery, setLeaderboardNameQuery] = React.useState(\n    defaultLeaderboardName\n  );\n\n  React.useEffect(() => {\n    const onHashChange = (ev: HashChangeEvent) => {\n      if (skipNextHashChange) {\n        skipNextHashChange = false;\n        return;\n      }\n      if (\n        ev.newURL !== ev.oldURL &&\n        ev.newURL.includes(window.location.hostname)\n      ) {\n        const newHash = ev.newURL.slice(ev.newURL.indexOf('#'));\n        const [newPlayerName, newLeaderboard] = getNameAndLeaderboardFromHash(\n          newHash\n        );\n        setPlayerNameQuery(newPlayerName);\n        setPlayerNameQuery(newPlayerName);\n        setLeaderboardNameQuery(newLeaderboard);\n      }\n    };\n    window.addEventListener('hashchange', onHashChange);\n    return () => {\n      window.removeEventListener('hashchange', onHashChange);\n    };\n  });\n\n  const setHash = (value: string) => {\n    skipNextHashChange = true;\n    window.location.hash = value;\n  };\n\n  const getApiUrl = (playerName: string, leaderboardName: string) => {\n    return playerName ? `lookup/${playerName}/${leaderboardName}` : '';\n  };\n\n  const [response, loading, error] = useGet(\n    getApiUrl(playerNameQuery, leaderboardNameQuery)\n  );\n\n  return (\n    <ThemeProvider theme={MUITheme}>\n      <div className={classes.app}>\n        <div className={classes.pageContent}>\n          <div className={classes.backgroundImageContainer}>\n            <img\n              src=\"/static/background.jpg\"\n              className={classes.backgroundImage}\n              alt=\"bg\"\n            />\n          </div>\n          <div className={classes.playerNameInputContainer}>\n            <PlayerLookupInput\n              isLoading={loading}\n              onSubmit={(playerName, leaderboardName) => {\n                const cacheKey = getCacheKey(\n                  getApiUrl(playerName, leaderboardName),\n                  ''\n                );\n                clearCache(cacheKey);\n                setPlayerNameQuery(playerName);\n                setLeaderboardNameQuery(leaderboardName);\n                setHash(`${playerName},${leaderboardName}`);\n              }}\n              defaultName={defaultPlayerName}\n              defaultLeaderboardName={defaultLeaderboardName}\n            />\n          </div>\n          <div className={classes.currentGameContainer}>\n            {!loading && response?.data.most_recent_game ? (\n              <CurrentGameInfo\n                {...gameResponseToProps(\n                  response?.data.profile_id,\n                  response?.data.most_recent_game\n                )}\n              />\n            ) : null}\n          </div>\n          <div className={classes.infoContainer}>\n            {!loading ? (\n              <PlayerInfo\n                playerName={response?.data.player_name}\n                playerId={response?.data.profile_id}\n                leaderboardName={leaderboardNameQuery}\n                numRecords={\n                  Object.keys(response?.data.tracker.records || {}).length\n                }\n                numGames={\n                  response?.data.tracker.wins + response?.data.tracker.losses\n                }\n              />\n            ) : null}\n          </div>\n          <div className={classes.tableContainer}>\n            <div className={classes.tableSize}>\n              {playerNameQuery ? (\n                <PlayerRecordsTable\n                  loading={loading}\n                  error={error}\n                  data={response?.data}\n                  leaderboardName={leaderboardNameQuery}\n                />\n              ) : null}\n            </div>\n          </div>\n          <header className={classes.appHeader}>\n            <div className={classes.headerSize}>\n              <div className={classes.headerLeft}>\n                AOE2: DE Head2Head - Matchup Tracker\n              </div>\n              <div className={classes.headerRight}>\n                <img\n                  src=\"static/aoe2net.png\"\n                  alt=\"aoe2net\"\n                  title=\"aoe2.net\"\n                  className={classes.headerIcon}\n                  onClick={() => {\n                    window.open('https://aoe2.net/');\n                  }}\n                ></img>\n                <img\n                  src=\"static/github.png\"\n                  alt=\"github\"\n                  title=\"github\"\n                  className={classes.headerIcon}\n                  onClick={() => {\n                    window.open(\n                      'https://github.com/benjamin-t-brown/aoe2de_head2head'\n                    );\n                  }}\n                ></img>\n              </div>\n            </div>\n          </header>\n          <footer className={classes.appFooter}>\n            This site is not affiliated with or endorsed by Microsoft\n            Corporation. Age of Empires II: Definitive Edition is a trademark or\n            registered trademark of Microsoft Corporation in the U.S. and other\n            countries.\n          </footer>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}